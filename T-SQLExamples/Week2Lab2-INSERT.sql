
--8.0 INSERT statements create new rows on a single table
/*
--   Useful scripts

	create table Words
		( 
		theID int identity(1000, 1) primary key,
		theWord nvarchar(50) not null default '<no word>',
		theMeaning nvarchar(100) null,
		aValue decimal(9,4) default 0
		)

	select * from Words

	delete from Words

	drop table Words
*/

--8.1   Single row INSERT using VALUES clause
--	Note: you cannot insert into identity column; An identity column is a column (also known as a field) in a database table 
-- that is made up of values generated by the database. This is much like an AutoNumber
--	Note: keyword INTO is optional

	insert into Words (theWord, theMeaning, aValue)
	values ('cat', 'animal of the feline persuasion', 7)

--8.2   Columns without inserted data will use the column default

	insert Words (theWord)
	values ('dog')

--8.3   DEFAULT VALUES keywords forces the insertion of default values across the row

	insert Words default values

	insert Words (theWord, theMeaning) values ('cow', default)

--8.4   In SQL Server, insert a value into identity column with IDENTITY_INSERT switch

	set identity_insert Words on

	insert into Words (theID, theWord, theMeaning, aValue)
	values (250, 'frog', 'Kermit type device', 11)

	set identity_insert Words off

--8.5   Insert multiple rows with a SELECT clause. Build it up!

	insert Words (theWord, theMeaning, aValue)
	select top 10 with ties FamilyName, 'top 10 shortest family name', len(FamilyName)
	from Person
	order by len(FamilyName)

	insert Words (theWord, theMeaning, aValue)
	select top 5 with ties p.FullName, 'top 5 most enrolled person', count(e.PaperID)
	from Enrolment e
	join Person p on p.PersonID = e.PersonID
	group by e.PersonID, p.FullName
	order by count(PaperID) desc

--NOTE: In T-SQL you can work with other servers and databases 
--	by using fully qualified object names
--	Fully qualified name = server.database.owner.objectName

	insert Words (theWord, theMeaning, aValue)
	select top 10 FullName, 'FullName length', len(FullName)
	from IN705_201902_kwood..Person
	Order by PersonID

	select
 @@SERVERNAME [server name],
 DB_NAME() [database name],
 SCHEMA_NAME(schema_id) [schema name], 
 name [table name],
 object_id,
 "fully qualified name (FQN)" =
 concat(QUOTENAME(DB_NAME()), '.', QUOTENAME(SCHEMA_NAME(schema_id)),'.', QUOTENAME(name))
from sys.tables
where type = 'U' -- USER_TABLE


--8.6		@@IDENTITY and SCOPE_IDENTITY() 
--			return the most-recent value created in any identity column 
--			by actions in this session.
--			Check SQLBOL to understand the small, subtle difference
--			between the two functions. 

	insert Words (theWord)
	values ('test @@identity')

	print 'New row inserted on Words. Using @@identity, theID = ' + cast(@@identity as nvarchar(5))
	print 'New row inserted on Words. Using SCOPE_IDENTITY theID = ' + cast(SCOPE_IDENTITY() as nvarchar(5))


--8.7		IDENT_CURRENT() returns
--			the most recent identity value created for a table,
--			in any scope and any session.

	print 'Using IDENT_CURRENT, theID = ' + cast(IDENT_CURRENT('Words') as nvarchar(5))
